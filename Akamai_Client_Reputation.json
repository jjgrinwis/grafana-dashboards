{
  "__inputs": [
    {
      "name": "DS_HYDROLIX_- POSTNL_GROUP_IT",
      "label": "Hydrolix - PostNL_Group_IT",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-clickhouse-datasource",
      "pluginName": "ClickHouse"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.1.1"
    },
    {
      "type": "datasource",
      "id": "grafana-clickhouse-datasource",
      "name": "ClickHouse",
      "version": "3.2.0"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Akamai SIEM powered by Hydrolix dashboard for security analytics\r\n",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 18823,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 20,
      "panels": [],
      "title": "Client Reputation",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "description": "Akamai Known Bots req. over time per host with the top ${limit} hosts.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [
            "sum",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "asc"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "format": 0,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT host, count(), $__timeInterval(timestamp) as time\nFROM ${table}\n  WHERE $__timeFilter(timestamp)\n  AND has(ruleTags, 'REPUTATION')\n  AND $__conditionalAll(host IN (${host:sqlstring}), $host)\n  GROUP BY time, host\n  ORDER BY time, count() DESC\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - statuscode - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 0
        }
      ],
      "title": "Client Reputation req. over Time per host",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "description": "Show the client reputation score  per group for a single IP over a selected period of time per day.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 12,
            "axisSoftMin": 0,
            "barAlignment": -1,
            "drawStyle": "line",
            "fillOpacity": 5,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "stepAfter",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 11
      },
      "id": 31,
      "interval": "6h",
      "options": {
        "legend": {
          "calcs": [
            "max",
            "min",
            "last"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Max",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "asc"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "format": 0,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT $__timeInterval(timestamp) as time, \nsplitByChar('=', assumeNotNull(data))[1] AS reputation_group,\ntoInt8(splitByChar('=', assumeNotNull(data))[2]) AS reputation_score, clientIP\nFROM ${table}\nARRAY JOIN ruleData as data, ruleTags as tag\n  WHERE $__timeFilter(timestamp)\n  AND tag = 'REPUTATION'  \n  AND isNotNull(data)\n  AND length(ruleTags) = length(ruleData)\n  AND $__conditionalAll(clientIP IN (${bad_reputation_client:sqlstring}), $clientIP)\n  AND $__conditionalAll(host IN (${host:sqlstring}), $host)\n  GROUP BY time, reputation_group, reputation_score, clientIP\n  ORDER BY time, reputation_group, reputation_score\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - clientrep - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 0
        }
      ],
      "timeFrom": "now-7d",
      "title": "Client Rep. score for a client ${bad_reputation_client} per group per ${__interval}",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "links": [
            {
              "title": "",
              "url": "/d/${__dashboard.uid}/${__dashboard}?var-bad_reputation_client=${__data.fields.clientIP:percentencode}&${__all_variables}&${__url_time_range}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 11
      },
      "id": 32,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT clientIP, count(*) as total_requests\nFROM ${table}\nWHERE $__timeFilter(timestamp)\nAND has(ruleTags, 'REPUTATION')\nAND $__conditionalAll(host IN (${host:sqlstring}), $host)\nGROUP BY clientIP\nORDER BY total_requests DESC\nLIMIT ${limit}\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - statuscode - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 1
        }
      ],
      "title": "Top ${limit} hosts with a bad reputation by # of req.",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 20
      },
      "id": 26,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^count\\(tag\\)$/",
          "limit": 7,
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\ncount(tag), host\nFROM ${table}\nARRAY JOIN ruleMessages as message, ruleTags as tag\nWHERE $__timeFilter(timestamp)\nAND tag = 'REPUTATION'\nAND $__conditionalAll(host IN (${host:sqlstring}), $host)\nGROUP BY host\nORDER BY count(tag) DESC\nLIMIT 200\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - statuscode - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 1
        }
      ],
      "title": "Client Reputation - per host",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 20
      },
      "id": 21,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^count\\(tag\\)$/",
          "limit": 7,
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\nmessage,  count(tag)\nFROM ${table}\nARRAY JOIN ruleMessages as message, ruleTags as tag\nWHERE $__timeFilter(timestamp)\nAND tag = 'REPUTATION'\nAND $__conditionalAll(host IN (${host:sqlstring}), $host)\nGROUP BY message\nORDER BY count(tag) DESC\nLIMIT 200\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - statuscode - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 1
        }
      ],
      "title": "Client Reputation - policies",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [
            {
              "options": {
                "DOSATCK": {
                  "index": 3,
                  "text": "Dos Attackers"
                },
                "SCANTL": {
                  "index": 0,
                  "text": "Scanning Tools"
                },
                "WEBATCK": {
                  "index": 2,
                  "text": "Web Attackers"
                },
                "WEBSCRP": {
                  "index": 1,
                  "text": "Web Scrapers"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 27
      },
      "id": 24,
      "options": {
        "displayMode": "lcd",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\nsplitByChar('=', assumeNotNull(data))[1] AS reputation_group,\ncount()\nFROM ${table}\n/* \nThere are situations where the ruleData and ruleTags are uneven in length.\nWe've seen this when a ruleTags array contains the 'AKAMAI/WAF/PENALTYBOX' tag. This tag doesn't have a corresponding ruleData.\nIf array's are incomplete the JOIN will fail. So a test with removing that specific entry from the ruleTags array so the are even in size again.\n-- ARRAY JOIN ruleData as data, ruleTags as tag\n*/ \nARRAY JOIN ruleData as data, if(length(ruleTags) != length(ruleData), arrayFilter(x -> x NOT LIKE 'AKAMAI/WAF/PENALTYBOX', ruleTags), ruleTags) as tag\nWHERE $__timeFilter(timestamp)\n-- First only filter on ruleTags that have reputation, then use ARRAY JOIN results to only filter REPUTATION entriesa\nAND has(ruleTags, 'REPUTATION')\nAND tag = 'REPUTATION'\n/*\nIn case arrayFilter function is not working, use length to only filter even ruleData/ruleTags so ARRAY JOIN is working correctly.\n--AND length(ruleTags) != length(ruleData)\n*/\nGROUP BY reputation_group\nORDER BY count() DESC\nLIMIT 5",
          "refId": "A",
          "selectedFormat": 1
        }
      ],
      "title": "Client Reputation - Request per reputation group",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "description": "The TimV special to show previous period.\nEnd date is  ${__from:date:YYYY-MM-DD HH:mm:ss} and start time is '(start time - interval).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [
            {
              "options": {
                "DOSATCK": {
                  "index": 3,
                  "text": "Dos Attackers"
                },
                "SCANTL": {
                  "index": 0,
                  "text": "Scanning Tools"
                },
                "WEBATCK": {
                  "index": 2,
                  "text": "Web Attackers"
                },
                "WEBSCRP": {
                  "index": 1,
                  "text": "Web Scrapers"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 12,
        "y": 27
      },
      "id": 27,
      "options": {
        "displayMode": "lcd",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\nsplitByChar('=', assumeNotNull(data))[1] AS reputation_group,\ncount()\nFROM ${table}\n/* \nThere are situations where the ruleData and ruleTags are uneven in length.\nWe've seen this when a ruleTags array contains the 'AKAMAI/WAF/PENALTYBOX' tag. This tag doesn't have a corresponding ruleData.\nIf array's are incomplete the JOIN will fail. So a test with removing that specific entry from the ruleTags array so the are even in size again.\n-- ARRAY JOIN ruleData as data, ruleTags as tag\n*/ \nARRAY JOIN ruleData as data, if(length(ruleTags) != length(ruleData), arrayFilter(x -> x NOT LIKE 'AKAMAI/WAF/PENALTYBOX', ruleTags), ruleTags) as tag\nWHERE timestamp >= toDateTime(${__from:date:seconds} - (${__to:date:seconds} - ${__from:date:seconds})) AND timestamp <= ${__from:date:seconds}\n-- First only filter on ruleTags that have reputation, then use ARRAY JOIN results to only filter REPUTATION entriesa\nAND has(ruleTags, 'REPUTATION')\nAND tag = 'REPUTATION'\n/*\nIn case arrayFilter function is not working, use length to only filter even ruleData/ruleTags so ARRAY JOIN is working correctly.\n--AND length(ruleTags) != length(ruleData)\n*/\nGROUP BY reputation_group\nORDER BY count() DESC\nLIMIT 5",
          "refId": "A",
          "selectedFormat": 1
        }
      ],
      "title": "Client Reputation - Request per reputation group - previous interval period until ${__from:date:YYYY-MM-DD HH:mm:ss}",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 33
      },
      "id": 25,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "uniqueValues"
          ],
          "fields": "",
          "limit": 25,
          "values": true
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\n/*\ndata will have format of SCANTL=10 for example\nand we have to assume it's not null as splitbychar will file otherwise.\n*/\nsplitByChar('=', assumeNotNull(data))[1] AS reputation_group,\nsplitByChar('=', assumeNotNull(data))[2] AS reputation_score,\ncount()\nFROM ${table}/* \nThere are situations where the ruleData and ruleTags are uneven in length.\nWe've seen this when a ruleTags array contains the 'AKAMAI/WAF/PENALTYBOX' tag. This tag doesn't have a corresponding ruleData.\nIf array's are incomplete the JOIN will fail. So a test with removing that specific entry from the ruleTags array so the are even in size again.\n-- ARRAY JOIN ruleData as data, ruleTags as tag\n*/ \nARRAY JOIN ruleData as data, if(length(ruleTags) != length(ruleData), arrayFilter(x -> x NOT LIKE 'AKAMAI/WAF/PENALTYBOX', ruleTags), ruleTags) as tag\nWHERE $__timeFilter(timestamp)\n-- First only filter on ruleTags that have reputation, then use ARRAY JOIN results to only filter REPUTATION entriesa\nAND has(ruleTags, 'REPUTATION')\nAND tag = 'REPUTATION'\n/*\nIn case arrayFilter function is not working, use length to only filter even ruleData/ruleTags so ARRAY JOIN is working correctly.\n--AND length(ruleTags) != length(ruleData)\n*/\nGROUP BY reputation_group, reputation_score\nORDER BY reputation_group, count() DESC, reputation_score DESC\nLIMIT 3 by reputation_group\nLIMIT 50\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - repscores - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 1
        }
      ],
      "title": "Client Reputation - Req. per Reputation scores group",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
      },
      "description": "Akamai Known Bots req. over time per host with the top ${limit} hosts.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "points",
            "fillOpacity": 26,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 40
      },
      "id": 29,
      "options": {
        "legend": {
          "calcs": [
            "sum",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "asc"
        }
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
          },
          "format": 0,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\nsplitByChar('=', assumeNotNull(data))[1] AS reputation_group, count(), $__timeInterval(timestamp) as time\n\nFROM ${table}\n/* \nThere are situations where the ruleData and ruleTags are uneven in length.\nWe've seen this when a ruleTags array contains the 'AKAMAI/WAF/PENALTYBOX' tag. This tag doesn't have a corresponding ruleData.\nIf array's are incomplete the JOIN will fail. So a test with removing that specific entry from the ruleTags array so the are even in size again.\n-- ARRAY JOIN ruleData as data, ruleTags as tag\n*/ \nARRAY JOIN ruleData as data, if(length(ruleTags) != length(ruleData), arrayFilter(x -> x NOT LIKE 'AKAMAI/WAF/PENALTYBOX', ruleTags), ruleTags) as tag\nWHERE $__timeFilter(timestamp)\n-- First only filter on ruleTags that have reputation, then use ARRAY JOIN results to only filter REPUTATION entriesa\nAND has(ruleTags, 'REPUTATION')\nAND tag = 'REPUTATION'\n/*\nIn case arrayFilter function is not working, use length to only filter even ruleData/ruleTags so ARRAY JOIN is working correctly.\n--AND length(ruleTags) != length(ruleData)\n*/\nGROUP BY reputation_group, time\nORDER BY time, count() DESC\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - repscoreovertime - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 0
        }
      ],
      "title": "Client Reputation req. over time per reputation group.",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
        },
        "definition": "SELECT CONCAT((SELECT name FROM system.databases),'.', 'siem')",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "table",
        "options": [],
        "query": "SELECT CONCAT((SELECT name FROM system.databases),'.', 'siem')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
        },
        "definition": "SELECT host\nFROM ${table}\nWHERE $__timeFilter(timestamp)\nGROUP BY host\nORDER BY host\nLIMIT 100",
        "hide": 0,
        "includeAll": true,
        "label": "Host",
        "multi": true,
        "name": "host",
        "options": [],
        "query": "SELECT host\nFROM ${table}\nWHERE $__timeFilter(timestamp)\nGROUP BY host\nORDER BY host\nLIMIT 100",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "5",
          "value": "5"
        },
        "description": "Limit on the number of hosts.",
        "hide": 0,
        "includeAll": false,
        "label": "ClientIP Limit",
        "multi": false,
        "name": "limit",
        "options": [
          {
            "selected": false,
            "text": "1",
            "value": "1"
          },
          {
            "selected": false,
            "text": "2",
            "value": "2"
          },
          {
            "selected": false,
            "text": "3",
            "value": "3"
          },
          {
            "selected": false,
            "text": "4",
            "value": "4"
          },
          {
            "selected": true,
            "text": "5",
            "value": "5"
          },
          {
            "selected": false,
            "text": "6",
            "value": "6"
          },
          {
            "selected": false,
            "text": "7",
            "value": "7"
          },
          {
            "selected": false,
            "text": "8",
            "value": "8"
          },
          {
            "selected": false,
            "text": "9",
            "value": "9"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          }
        ],
        "query": "1,2,3,4,5,6,7,8,9,10",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_HYDROLIX_- POSTNL_GROUP_IT}"
        },
        "definition": "SELECT toString(clientIP)\nFROM ${table}\nWHERE $__timeFilter(timestamp) \nAND has(ruleTags, 'REPUTATION')\nGROUP BY clientIP\nORDER BY count() DESC\nLIMIT 10",
        "description": "Top 10 clients with a bad reputation sorted by most request",
        "hide": 2,
        "includeAll": false,
        "label": "Reputation",
        "multi": false,
        "name": "bad_reputation_client",
        "options": [],
        "query": "SELECT toString(clientIP)\nFROM ${table}\nWHERE $__timeFilter(timestamp) \nAND has(ruleTags, 'REPUTATION')\nGROUP BY clientIP\nORDER BY count() DESC\nLIMIT 10",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Akamai Client Reputation",
  "uid": "b23751ba-ff8c-4b87-98ee-ce7e3d6ebbca",
  "version": 22,
  "weekStart": ""
}