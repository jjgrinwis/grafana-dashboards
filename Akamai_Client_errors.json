{
  "__inputs": [
    {
      "name": "DS_HYDROLIX_- customer",
      "label": "Hydrolix - customer",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-clickhouse-datasource",
      "pluginName": "ClickHouse"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.1.1"
    },
    {
      "type": "datasource",
      "id": "grafana-clickhouse-datasource",
      "name": "ClickHouse",
      "version": "3.2.0"
    },
    {
      "type": "panel",
      "id": "logs",
      "name": "Logs",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Showing client errors but using JOIN which might be 'query' intensive.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 18453,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Number of request group by HTTP Status Code",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [
            "sum",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "builderOptions": {
            "database": "elkjop",
            "fields": [],
            "filters": [],
            "limit": 100,
            "mode": "list",
            "orderBy": [],
            "table": "logs"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "meta": {
            "builderOptions": {
              "database": "elkjop",
              "fields": [],
              "filters": [],
              "limit": 100,
              "mode": "list",
              "orderBy": [],
              "table": "logs"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT toString(statusCode) as HTTP_Status_Code, $__timeInterval(reqTimeSec) as time, count(*) as http\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\nAND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\nAND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\nGROUP BY HTTP_Status_Code, time ORDER BY time\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - 4xxresp - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "4xx resp. over time per $__interval",
      "transformations": [
        {
          "id": "prepareTimeSeries",
          "options": {
            "format": "many"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "403's per attack group over time. As an INNER JOIN is taking too long, we're now combining two queries into one dashboard. So lookup the 403's in the DS data and combine that with 'deny' actions from the SIEM logs. ",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": -1,
            "drawStyle": "line",
            "fillOpacity": 15,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 3600000,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "log": 2,
              "type": "log"
            },
            "showPoints": "always",
            "spanNulls": 3600000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [
            "sum",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Total",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "builderOptions": {
            "database": "elkjop",
            "fields": [],
            "filters": [],
            "limit": 100,
            "mode": "list",
            "orderBy": [],
            "table": "logs"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "meta": {
            "builderOptions": {
              "database": "elkjop",
              "fields": [],
              "filters": [],
              "limit": 100,
              "mode": "list",
              "orderBy": [],
              "table": "logs"
            }
          },
          "queryType": "sql",
          "rawSql": "/*\n If the errorCode is not ERR_ACCESS_DENIED then only use the 'main' part before the |\n We're ignoring the ERR_ACCESS_DENIED|waf but want to know some details when delivery part is blocking the request.\n So this query will only give the requests that are blocked by the CDN for whatever reason.\n If there is no errorCode but a 403 it's blocked by the WAF.\n */\nSELECT $__timeInterval(reqTimeSec) AS time,\nIF (isNull(errorCode), 'ERR_ACCESS_DENIED_BY_ORIGIN', splitByChar('|', assumeNotNull(errorCode))[1]) AS tag, count(*) as total\nFROM ${database}.logs\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\nAND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\nAND statusCode = 403\n--AND isNotNull(errorCode)\nAND (errorCode != 'ERR_ACCESS_DENIED|waf' OR isNull(errorCode))\nGROUP BY tag, time\nORDER BY time\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - 403s_logs - ${__user.login}'",
          "refId": "CDN",
          "selectedFormat": 4
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "hide": false,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "/*\nThis query will lookup all the deny events in the SIEM logs and will group based on the attack type, like SQLi for example\n*/\nSELECT $__timeInterval(timestamp) AS time, ruleTags[indexOf(ruleActions, 'deny')] AS tag, count(*) as total\nFROM ${database}.siem\nWHERE $__timeFilter(timestamp)\nAND hasAny(ruleActions,['deny'])\nAND $__conditionalAll( host IN (${reqHost:sqlstring}), $host)\nAND $__conditionalAll(clientIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\nGROUP BY tag, time\nORDER BY time\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - 403s_siem - ${__user.login}'",
          "refId": "WAF",
          "selectedFormat": 4
        }
      ],
      "title": "403's resp. per group CDN/WAF",
      "transformations": [
        {
          "id": "prepareTimeSeries",
          "options": {
            "format": "many"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Show the 403's generated by either the CDN configuration or security layer. This doesn't include and \"bot\" related mitigations like tarpit, slow etc. \n\nThis will work fine for a small number of records but will timeout if there are too many records as using an INNER JOIN is a very bad idea: https://hydrolix.io/blog/handling-multiple-groupings-in-a-single-pass/\n\nBut leaving this one here for now as I'm still impressed by the SQL. 😉",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "requestId"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 91
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-requestId=${__data.fields.requestId}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "attack_group"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 230
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "denied_by"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 175
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Client"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 157
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-clientIP=${__data.fields.Client}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqHost"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-reqHost=${__data.fields.reqHost}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 209
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqPath"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 143
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "id": 19,
      "links": [
        {
          "targetBlank": true,
          "title": "",
          "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403"
        }
      ],
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "time"
          }
        ]
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "/*\nNot every 403 is generated by the WAF, can be generated by the delivery config or origin which don't trigger a SIEM event.\nSo using LEFT JOIN to also get 403's without a SIEM entry but we need to create some 'dummy' CDN/Origin warnings.\nBut if blocked by the origin there is no errorCode.\n*/\nSELECT ID as requestId, time, cliIP as Client, replaceRegexpOne(lcase(reqHost), ':\\d*$', '') as reqHost, reqPath,\nif(isNull(errorCode), 'Origin', splitByChar('|', assumeNotNull(errorCode))[2]) as denied_by,\n/*\nIf there is no SIEM entry, tag and message will be null. If there is no SIEM entry it's created by the delivery config.\nBut SIEM integration might not be available yet, so creating some special if statements to check that.\nFormat of if: if(cond, then, else)\n*/\nif(denied_by = 'Origin', 'ORIGIN', if(isNull(tag), if(denied_by!='waf', 'CDN','no SIEM entry available'), tag)) AS rules,\nif(denied_by = 'Origin', 'Blocked by Origin', if(isNull(message),if(denied_by!='waf', 'Blocked by delivery configuration','no SIEM entry available'), message)) AS messages\nFROM (\n\tSELECT reqId as ID, errorCode, cliIP, replaceRegexpOne(lcase(reqHost), ':\\d*$', '') as reqHost, reqPath, reqTimeSec as time\n\tFROM ${database}.logs\n\tWHERE $__timeFilter(reqTimeSec)\n\tAND statusCode = 403\n\tAND $__conditionalAll(reqHost IN (${reqHost:sqlstring}), $reqHost)\n\tAND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\n\t/*\n\tif you're not interested in origin genereted 403's uncomment the isNotNull.\n\t--AND isNotNull(errorCode) \n\t*/\n\t--LIMIT 500\n) l LEFT JOIN (\n\t/* \n\tWe're only interested in the deny messages, no need to show any \"monitoring/alert\" events.\n\tLet's get the index of the first deny action and corresponding ruleMessage and ruleTag using the same index.\n\tMake sure to use the __timefilter otherwise you will see timeouts!\n\t*/\n\tSELECT requestId AS ID, indexOf(ruleActions, 'deny') AS index, ruleMessages[index] AS message, ruleTags[index] AS tag\n\tFROM ${database}.siem\n\tWHERE $__timeFilter(timestamp)\n\tAND $__conditionalAll( host IN (${reqHost:sqlstring}), $host)\n\tAND $__conditionalAll(clientIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\n\t-- For now only filtering on deny, this might be extended with some specific bot rules later.\n\tAND hasAny(ruleActions,['deny'])\n\t--LIMIT 500\n) r USING (ID)\nORDER BY time DESC\nLIMIT 500\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - error - ${__user.login}'\n",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "403's per rule over time using SQL  INNER JOIN. 🤞",
      "transformations": [],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "403's per attack group over time. As an INNER JOIN is taking too long, we're now combining two queries into one dashboard. So lookup the 403's in the DS data and combine that with 'deny' actions from the SIEM logs OUTER JOINed by the reqId using a Grafana transformer. Also using a LIMIT to restrict the number of records returned.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "string"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reqId"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 174
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-requestId=${__data.fields.reqId}&${__all_variables}&${__url_time_range}\n\n"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqHost CDN"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 207
              },
              {
                "id": "links",
                "value": []
              },
              {
                "id": "displayName",
                "value": "reqHost"
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-reqHost=${__data.fields.reqHost}&${__all_variables}&${__url_time_range}\n"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "time CDN"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 236
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "tag CDN"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "denied by"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqPath CDN"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "reqPath"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 10
      },
      "id": 29,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "builderOptions": {
            "database": "elkjop",
            "fields": [],
            "filters": [],
            "limit": 100,
            "mode": "list",
            "orderBy": [],
            "table": "logs"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "hide": false,
          "meta": {
            "builderOptions": {
              "database": "elkjop",
              "fields": [],
              "filters": [],
              "limit": 100,
              "mode": "list",
              "orderBy": [],
              "table": "logs"
            }
          },
          "queryType": "sql",
          "rawSql": "/*\n If the errorCode is not ERR_ACCESS_DENIED then only use the 'main' part before the |\n We're ignoring the ERR_ACCESS_DENIED|waf but want to know some details when delivery part is blocking the request.\n So this query will only give the requests that are blocked by the CDN for whatever reason.\n If there is no errorCode but a 403 it's blocked by the WAF.\n */\nSELECT reqTimeSec AS time, reqId, cliIP, reqHost, reqPath,\nIF (isNull(errorCode), 'Origin', splitByChar('|', assumeNotNull(errorCode))[2]) AS tag\nFROM ${database}.logs\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\nAND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\nAND statusCode = 403\n--AND isNotNull(errorCode)\n--AND (errorCode != 'ERR_ACCESS_DENIED|waf' OR isNull(errorCode))\nORDER BY time DESC\nLIMIT 500\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - 403s_logs - ${__user.login}'",
          "refId": "CDN",
          "selectedFormat": 1
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "hide": false,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "/*\nThis query will lookup all the deny events in the SIEM logs and will group based on the attack type, like SQLi for example\n*/\nSELECT indexOf(ruleActions, 'deny') AS index, ruleTags[index] AS tag, requestId AS reqId, ruleMessages[index] AS message\nFROM ${database}.siem\nWHERE $__timeFilter(timestamp)\nAND hasAny(ruleActions,['deny'])\nAND $__conditionalAll( host IN (${reqHost:sqlstring}), $host)\nAND $__conditionalAll(clientIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\nORDER BY timestamp DESC\nLIMIT 500\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - 403s_siem - ${__user.login}'",
          "refId": "WAF",
          "selectedFormat": 1
        }
      ],
      "title": "403's resp. per group CDN/WAF using a Grafana OUTER JOIN transformer on reqid.",
      "transformations": [
        {
          "id": "joinByField",
          "options": {
            "byField": "reqId",
            "mode": "outer"
          }
        },
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "reqId",
                "time CDN",
                "reqHost CDN",
                "reqPath CDN",
                "tag CDN",
                "tag WAF",
                "message WAF"
              ]
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "count()"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 83
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqPath"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Filter",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-reqPath=${__data.fields.reqPath:percentencode}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 0,
        "y": 19
      },
      "id": 18,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\n    count(), replaceRegexpOne(lcase(reqHost), ':\\d*$', '') as reqHost\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\nAND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\nAND $__conditionalAll(reqHost IN (${reqHost:sqlstring}), $reqHost)\nGROUP BY reqHost\nORDER BY count() DESC\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - topPath - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "HTTP 4xx response codes per host",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Top 10 clientIP's generating most 4xx responses",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "count()"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 83
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cliIP"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Filter",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-clientIP=${__data.fields.cliIP}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 4,
        "y": 19
      },
      "id": 21,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\n    count(),\n    cliIP\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\nAND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\nGROUP BY cliIP\nORDER BY count() DESC\nLIMIT 10\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - error_per_client - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "HTTP 4xx response codes per clientIP",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Top 10 clientIP's generating most 4xx responses",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "count()"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 83
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cliIP"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Filter",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-clientIP=${__data.fields.cliIP}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 19
      },
      "id": 27,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\n    count(),\n    country\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\nAND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\nGROUP BY country\nORDER BY count() DESC\nLIMIT 10\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - error_per_client - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "HTTP 4xx response codes per clientIP",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Cache Hit Ratio :\nsum of all request with cacheStatus: 1 / divided by total count of request",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds",
            "seriesBy": "last"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 27
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "builderOptions": {
            "database": "elkjop",
            "fields": [],
            "filters": [],
            "limit": 100,
            "mode": "list",
            "orderBy": [],
            "table": "logs"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "database": "elkjop",
              "fields": [],
              "filters": [],
              "limit": 100,
              "mode": "list",
              "orderBy": [],
              "table": "logs"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\n        time, cache_hit \n    FROM\n        ( SELECT\n            $__timeInterval(reqTimeSec) as time,\n            sumIf(cacheStatus, 1) as \"cached\",\n            cached/count() * 100 as \"cache_hit\" \n        FROM\n            ${table} \n        WHERE\n            $__timeFilter(reqTimeSec) \n            AND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\n            AND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\n            AND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\n        GROUP BY time \n        ORDER BY time) \n        SETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - cachehit - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "Cache Hit Ratio",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Sum of Total Bytes Delivered",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "super-light-purple",
            "mode": "fixed",
            "seriesBy": "last"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "light-blue",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 27
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "builderOptions": {
            "database": "elkjop",
            "fields": [],
            "filters": [],
            "limit": 100,
            "mode": "list",
            "orderBy": [],
            "table": "logs"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "meta": {
            "builderOptions": {
              "database": "elkjop",
              "fields": [],
              "filters": [],
              "limit": 100,
              "mode": "list",
              "orderBy": [],
              "table": "logs"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT $__timeInterval(reqTimeSec) as time,\nsum(totalBytes) as Bytes_Delivered\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\nAND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\nAND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\nGROUP BY time ORDER BY time\nSETTINGS hdx_query_max_execution_time=60, hdx_query_admin_comment='akamai - bytes - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "Bytes Delivered",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Check the objects that are still being requested but don't exist anymore. Maybe inform the backend team to do some cleanup. ;-)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "count()"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 83
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqHost"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-reqHost=${__data.fields.reqHost}&${__all_variables}&${__url_time_range}"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 163
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqPath"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 419
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 18,
        "x": 0,
        "y": 35
      },
      "id": 5,
      "links": [
        {
          "targetBlank": true,
          "title": "",
          "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404"
        }
      ],
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "WITH (\n        SELECT topK(50)(reqPath)\n        FROM ${table}\n        WHERE $__timeFilter(reqTimeSec)\n        AND statusCode = '404'\n        AND $__conditionalAll( replaceRegexpOne(lcase(reqHost), ':\\d*$', '') as reqHost IN (${reqHost:sqlstring}), $reqHost)\n        AND $__conditionalAll(cliIP ${AND_cliIP} (${clientIP:sqlstring}), $clientIP)\n    ) AS top_50_reqPath\nSELECT\n    count(),\n    reqPath,\n    replaceRegexpOne(lcase(reqHost), ':\\d*$', '') as reqHost,\n    sum(bytes) as total_bytes,\n    round(avg(bytes)) as avg_bytes\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec) AND has(top_50_reqPath, reqPath)\nGROUP BY reqPath, reqHost\nORDER BY count() DESC\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - topPath - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "Top 50 404's per reqpath",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "avg_bytes": "avg. bytes per request",
              "total_bytes": "total bytes delivered"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Top 10 clientIP's generating most 4xx responses",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "count()"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 83
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reqPath"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Filter",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-reqPath=${__data.fields.reqPath:percentencode}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cliIP"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}/${__dashboard}?var-clientIP=${__data.fields.cliIP}&${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 35
      },
      "id": 22,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "expand": true,
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "SELECT\n    count(),\n    cliIP\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND statusCode = '404'\nAND $__conditionalAll( reqHost IN (${reqHost:sqlstring}), $reqHost)\nGROUP BY cliIP\nORDER BY count() DESC\nLIMIT 10\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - error_per_client - ${__user.login}'",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "HTTP 404 response codes per clientIP",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 24,
      "panels": [],
      "title": "Raw Logs",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "DataStream Edge Access logs",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 44
      },
      "id": 25,
      "options": {
        "dedupStrategy": "none",
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": false,
        "sortOrder": "Descending",
        "wrapLogMessage": false
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "/*\nsome issues with OSS version of grafana so converting Map(String, Nullable(String)) to strings\n*/\nSELECT reqId::String,\n    toString(unknown) as unknown, \n\t\t*\n\t\tEXCEPT unknown\nFROM ${database}.logs\nWHERE $__timeFilter(reqTimeSec)\n--AND requestId = '67d24c3e'\nAND $__conditionalAll(reqId IN (${requestId:sqlstring}), $requestId)\nLIMIT 100",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "Edge access logs",
      "type": "logs"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_HYDROLIX_- customer}"
      },
      "description": "Raw data for the different SIEM entries",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 44
      },
      "id": 26,
      "options": {
        "dedupStrategy": "none",
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": false,
        "sortOrder": "Descending",
        "wrapLogMessage": false
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_HYDROLIX_- customer}"
          },
          "format": 1,
          "meta": {
            "builderOptions": {
              "fields": [],
              "limit": 100,
              "mode": "list"
            }
          },
          "queryType": "sql",
          "rawSql": "/*\nsome issues with OSS version of grafana so converting Map(String, Nullable(String)) to strings\n*/\nSELECT requestId::String,\n    toString(botData) as botData,\n\t\ttoString(clientData) as clientData,\n\t\ttoString(requestHeaders) as requestHeaders,\n\t\ttoString(responseHeaders) as responseHeaders,\n\t\ttoString(userRiskData) as userRiskData, \n\t\t*\n\t\tEXCEPT (botData, clientData, requestHeaders, responseHeaders, userRiskData)\nFROM ${database}.siem\nWHERE $__timeFilter(timestamp)\n--AND requestId = '67d24c3e'\nAND $__conditionalAll(requestId IN (${requestId:sqlstring}), $requestId)\nLIMIT 100",
          "refId": "A",
          "selectedFormat": 4
        }
      ],
      "title": "SIEM entries",
      "type": "logs"
    }
  ],
  "refresh": false,
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_HYDROLIX_- customer}"
        },
        "definition": "SELECT\n    replaceRegexpOne(lcase(reqHost), ':\\d*$', '')\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\nGROUP BY reqHost\nORDER BY reqHost\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - 403hosts - ${__user.login}'",
        "hide": 0,
        "includeAll": true,
        "label": "Host",
        "multi": true,
        "name": "reqHost",
        "options": [],
        "query": "SELECT\n    replaceRegexpOne(lcase(reqHost), ':\\d*$', '')\nFROM ${table}\nWHERE $__timeFilter(reqTimeSec)\nAND $__conditionalAll( statusCode IN (${errorCode:sqlstring}), $statusCode)\nGROUP BY reqHost\nORDER BY reqHost\nSETTINGS hdx_query_max_execution_time=120, hdx_query_admin_comment='akamai - 403hosts - ${__user.login}'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_HYDROLIX_- customer}"
        },
        "definition": "SELECT CONCAT((SELECT name FROM system.databases),'.', 'logs')",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "table",
        "options": [],
        "query": "SELECT CONCAT((SELECT name FROM system.databases),'.', 'logs')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "description": "Real redirects, ignoring special redirections 300 and 304.",
        "hide": 2,
        "includeAll": false,
        "label": "Error Code",
        "multi": false,
        "name": "errorCode",
        "options": [
          {
            "selected": true,
            "text": "400",
            "value": "400"
          },
          {
            "selected": false,
            "text": "401",
            "value": "401"
          },
          {
            "selected": false,
            "text": "402",
            "value": "402"
          },
          {
            "selected": false,
            "text": "403",
            "value": "403"
          },
          {
            "selected": false,
            "text": "404",
            "value": "404"
          },
          {
            "selected": false,
            "text": "405",
            "value": "405"
          },
          {
            "selected": false,
            "text": "406",
            "value": "406"
          },
          {
            "selected": false,
            "text": "407",
            "value": "407"
          },
          {
            "selected": false,
            "text": "408",
            "value": "408"
          },
          {
            "selected": false,
            "text": "409",
            "value": "409"
          },
          {
            "selected": false,
            "text": "410",
            "value": "410"
          },
          {
            "selected": false,
            "text": "411",
            "value": "411"
          },
          {
            "selected": false,
            "text": "412",
            "value": "412"
          },
          {
            "selected": false,
            "text": "413",
            "value": "413"
          },
          {
            "selected": false,
            "text": "414",
            "value": "414"
          },
          {
            "selected": false,
            "text": "415",
            "value": "415"
          },
          {
            "selected": false,
            "text": "416",
            "value": "416"
          },
          {
            "selected": false,
            "text": "417",
            "value": "417"
          },
          {
            "selected": false,
            "text": "418",
            "value": "418"
          },
          {
            "selected": false,
            "text": "419",
            "value": "419"
          },
          {
            "selected": false,
            "text": "421",
            "value": "421"
          },
          {
            "selected": false,
            "text": "422",
            "value": "422"
          },
          {
            "selected": false,
            "text": "423",
            "value": "423"
          },
          {
            "selected": false,
            "text": "424",
            "value": "424"
          },
          {
            "selected": false,
            "text": "425",
            "value": "425"
          },
          {
            "selected": false,
            "text": "426",
            "value": "426"
          },
          {
            "selected": false,
            "text": "428",
            "value": "428"
          },
          {
            "selected": false,
            "text": "429",
            "value": "429"
          },
          {
            "selected": false,
            "text": "431",
            "value": "431"
          },
          {
            "selected": false,
            "text": "451",
            "value": "451"
          }
        ],
        "query": "400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,422,423,424,425,426,428,429,431,451",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_HYDROLIX_- customer}"
        },
        "definition": "SELECT name FROM system.databases",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "database",
        "options": [],
        "query": "SELECT name FROM system.databases",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "description": "Lookup specific clientIP",
        "hide": 0,
        "label": "ClientIP",
        "name": "clientIP",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "include",
          "value": "IN"
        },
        "hide": 1,
        "includeAll": false,
        "multi": false,
        "name": "AND_cliIP",
        "options": [
          {
            "selected": true,
            "text": "include",
            "value": "IN"
          },
          {
            "selected": false,
            "text": "exclude : NOT IN",
            "value": "exclude : NOT IN"
          }
        ],
        "query": "include : IN, exclude : NOT IN\n",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "null",
          "value": "null"
        },
        "hide": 0,
        "label": "requestId",
        "name": "requestId",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now-1m"
  },
  "timepicker": {
    "hidden": false,
    "nowDelay": "1m"
  },
  "timezone": "",
  "title": "Akamai Client errors",
  "uid": "ef230733-3497-4380-b09a-c822348b3455",
  "version": 19,
  "weekStart": ""
}
